import telebot
from config import allval, TOKEN
from excep import ConvertionException, Converter
from telebot import types

bot = telebot.TeleBot(TOKEN)

@bot.message_handler(commands=['start', 'help'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    btn1 = types.KeyboardButton("üîé –£—Å–ª–æ–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è")
    btn2 = types.KeyboardButton("üí∏ –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã")
    markup.add(btn1, btn2)
    bot.send_message(message.chat.id, text=f'–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, {message.chat.first_name}!\n–≠—Ç–æ—Ç —Ç–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –í–∞–º –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∞–ª—é—Ç—ã.', reply_markup=markup)


@bot.message_handler(content_types=['text'])
def func(message):
    if (message.text == "üîé –£—Å–ª–æ–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è"):
        bot.send_message(message.chat.id, text=f"{message.chat.first_name}, –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏:\n <–∏–º—è –≤–∞–ª—é—Ç—ã>/ <–≤ –∫–∞–∫—É—é –≤–∞–ª—é—Ç—É –ø–µ—Ä–µ–≤–µ—Å—Ç–∏>/ <–∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞–ª—é—Ç—ã>\n–ü—Ä–∏–º–µ—Ä: –¥–æ–ª–ª–∞—Ä —Ä—É–±–ª—å 100")
    elif (message.text == "üí∏ –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        text = '–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã: '
        for i in allval.keys():
            text = '\n'.join((text, i))
        bot.send_message(message.chat.id, text)

    elif(message.text != 'üîé –£—Å–ª–æ–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è', 'üí∏ –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã'):
        values = message.text.split(' ')
        try:

            if len(values) != 3:
                raise ConvertionException('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ 3 –ø–∞—Ä–∞–º–µ—Ç—Ä–∞')
            val1, val2, cash = values

            cash = Converter.convert(*values)
        except ConvertionException as e:
            bot.reply_to(message, f'–û—à–∏–±–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. \n{e}')
        except Exception as e:
            bot.reply_to(message, f'–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ–º–∞–Ω–¥—É\n {e}')
        else:
            bot.reply_to(message, cash)

bot.polling(non_stop=True)

